name: Build and Release Go Project

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: build_check
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: amd64
            os: linux
            name: sshs-linux-amd64
          - target: amd64
            os: darwin
            name: sshs-darwin-amd64
          - target: amd64
            os: windows
            name: sshs-windows-amd64
          - target: arm64
            os: linux
            name: sshs-linux-arm64
          - target: arm64
            os: darwin
            name: sshs-darwin-arm64

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.target }} go build -o sshs .
          if [ -f "sshs" ]; then
            tar czvf ${{ matrix.name }}.tar.gz sshs
            echo "Build succeeded: ${{ matrix.name }}.tar.gz created."
          else
            echo "Build failed: sshs not found."
            exit 1
          fi

      - name: Upload the build as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.tar.gz
          
      - name: List files before uploading artifacts
        run: |
          echo "Listing files:"
          ls -la

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: List files before downloading artifacts
        run: |
          echo "Listing files before download:"
          ls -la
    
      - name: Setup | Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./

      - name: List downloaded artifacts
        run: |
          echo "Listing downloaded artifacts:"
          ls -la
          echo "Checking for tar.gz files"
          ls *.tar.gz || echo "No tar.gz files found"

      - name: Check contents of extracted artifacts
        run: |
          echo "Checking contents of each folder:"
          for dir in */; do
            echo "Contents of $dir:"
            ls -la "$dir" || echo "Failed to list contents of $dir"
          done

      - name: Setup | Checksums
        run: |
          if ls *.tar.gz 1> /dev/null 2>&1; then
            for file in *.tar.gz; do
              openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"
            done
          else
            echo "No tar.gz files to create checksums for."
            exit 1
          fi

      - name: Release | Add Artifacts to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            **/*.tar.gz
            *.sha256
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}