name: SLSA generic generator

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      digests: ${{ steps.hash.outputs.digests }}

    steps:
      - uses: actions/checkout@v4

      - name: Build artifacts for all platforms
        run: |
          platforms=("linux/amd64" "linux/arm64" "windows/amd64" "windows/386" "darwin/amd64" "darwin/arm64" "freebsd/amd64" "freebsd/arm64" "openbsd/amd64" "openbsd/arm64" "netbsd/amd64" "netbsd/arm64")
          mkdir -p releases 
          
          for platform in "${platforms[@]}"; do
            os_arch=(${platform//\// })
            os=${os_arch[0]}
            arch=${os_arch[1]}
            
            dir_name="releases/${os}_${arch}"
            mkdir -p "$dir_name"

            output_file="$dir_name/sshs_${os}_${arch}"

            # Build the Go program for the specified OS and architecture
            GOOS=$os GOARCH=$arch go build -o "$output_file" ./...
            echo "$output_file" >> artifacts.txt
          done

      - name: Generate subject for provenance
        id: hash
        run: |
          set -euo pipefail

          # List the artifacts the provenance will refer to.
          files=$(cat artifacts.txt)
          # Generate the subjects (base64 encoded).
          echo "hashes=$(sha256sum $files | base64 -w0)" >> "${GITHUB_OUTPUT}"

  provenance:
    needs: [build]
    permissions:
      actions: read   # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.build.outputs.digests }}"
      upload-assets: true # Optional: Upload to a new release