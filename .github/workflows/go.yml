# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build for all platforms
        run: |
          platforms=("linux/amd64" "linux/arm64" "windows/amd64" "windows/386" "darwin/amd64" "darwin/arm64" "freebsd/amd64" "freebsd/arm64" "openbsd/amd64" "openbsd/arm64" "netbsd/amd64" "netbsd/arm64")
          for platform in "${platforms[@]}"; do
            os_arch=(${platform//\// })
            os=${os_arch[0]}
            arch=${os_arch[1]}
            output_dir="${os}_${arch}"
            output_file="sshs"

            # Create the output directory if it doesn't exist
            mkdir -p "$output_dir"

            # Build the Go program for the specified OS and architecture
            GOOS=$os GOARCH=$arch go build -o "$output_dir/$output_file" ./...
          done

      - name: Test
        run: go test -v ./...

      - name: Generate SLSA Provenance
        id: provenance
        run: |
          set -euo pipefail

          # Generate SHA256 hashes of the built artifacts
          files=$(find . -name 'sshs' -exec sha256sum {} \;)
          if [ -z "$files" ]; then
            echo "No artifacts found!"
            exit 1
          fi
          echo "hashes=$(echo "$files" | base64 -w0)" >> "${GITHUB_OUTPUT}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-artifacts
          path: sshs/

  provenance:
    needs: [build]
    permissions:
      actions: read   # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.build.outputs.digests }}"
      upload-assets: true # Optional: Upload to a new release