name: Build and Release Go Project

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64, 386]
      fail-fast: false
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Build binary
        if: "!(matrix.goos == 'darwin' && matrix.goarch == '386')"
        run: |
          mkdir -p build/${{ matrix.goos }}-${{ matrix.goarch }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/${{ matrix.goos }}-${{ matrix.goarch }}/sshs
          if [[ "${{ matrix.goos }}" == "windows" ]]; then mv build/${{ matrix.goos }}-${{ matrix.goarch }}/sshs build/${{ matrix.goos }}-${{ matrix.goarch }}/sshs.exe; fi

      - name: Upload artifact
        if: "!(matrix.goos == 'darwin' && matrix.goarch == '386')"
        uses: actions/upload-artifact@v3
        with:
          name: sshs-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/${{ matrix.goos }}-${{ matrix.goarch }}/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: sshs-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}